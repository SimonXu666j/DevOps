1.持续集成的定义：不间断的对软件开发的各个过程集成，包括开发、部署、测试等。
2.持续集成的特点：1.开源，免费
                  2.入门便捷：下载一个Jenkins的最新版本的war包，本地环境装一个JDK，就可以启动Jenkins服务了。
				  3.易用性好：所见即所得
				  4.用的人越来越多
				  5.有组织长期维护
				  6.扩展性：扩展性极好，支持多种插件，例如：Shell、SSH、Maven、Ant等
3.原则
      3.1维护唯一的代码仓库：SVN、Perforces、CVS、GitHub等。
	  3.2让你的构建能自测：构建，传统意义上意味着编译、链接和一些程序执行的工作。获取BUG的最好方式是在代码构建过程中包含自动测试。极限编程和测试驱动开发已经为自测代码的推广树立了好的
	  榜样，测试驱动开发是一种生产自测代码的方式。对于自测代码，需要一套自动测试来检查大段代码中的BUG，这些测试需要能被从简单的命令中剔除并能够自测。测试的结果能够指示错误所在。自测的
	  失败会造成构建的失败。测试驱动的开发的广泛使用能让开源工具XUnit family在测试中普及，Unit工具在ThoughtWorks的工作时间中已经被证明非常有用，能帮助我们轻易地构建一个完整的自测环境。
	  XUnit工具是代码自测的起点。end-end测试的工具：FIT、Selenium、Sahi、Watir、FITnesse。
	  3.3日构建，每人每日提交代码：频繁操作，开发者能很快地发现两个开发者间的冲突。
	  3.4每次提交都在主线记得机器上做构建：持续集成的服务器就像数据仓库的监视器，每次提交代码都会自动触发checkout代码到集成服务器上 ，初始化构建并将结果通知提交者。
4.总结：持续集成是一种做事不断持续，代码不断集成的工作思想，它是一种节奏。